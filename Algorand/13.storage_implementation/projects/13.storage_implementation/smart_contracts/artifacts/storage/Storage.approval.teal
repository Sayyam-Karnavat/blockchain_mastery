#pragma version 10

smart_contracts.storage.contract.Storage.approval_program:
    callsub __puya_arc4_router__
    return


// smart_contracts.storage.contract.Storage.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@8
    method "hello(string)string"
    method "global_storage_update()void"
    method "local_storage(account,string)void"
    method "box_storage()bool"
    txna ApplicationArgs 0
    match __puya_arc4_router___hello_route@2 __puya_arc4_router___global_storage_update_route@3 __puya_arc4_router___local_storage_route@4 __puya_arc4_router___box_storage_route@5
    int 0
    retsub

__puya_arc4_router___hello_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    extract 2 0
    callsub hello
    dup
    len
    itob
    extract 6 2
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___global_storage_update_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub global_storage_update
    int 1
    retsub

__puya_arc4_router___local_storage_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    txna ApplicationArgs 2
    extract 2 0
    callsub local_storage
    int 1
    retsub

__puya_arc4_router___box_storage_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub box_storage
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___bare_routing@8:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@12
    txn ApplicationID
    !
    assert // is creating
    int 1
    retsub

__puya_arc4_router___after_if_else@12:
    int 0
    retsub


// smart_contracts.storage.contract.Storage.hello(name: bytes) -> bytes:
hello:
    proto 1 1
    byte "Hello, "
    frame_dig -1
    concat
    retsub


// smart_contracts.storage.contract.Storage.global_storage_update() -> void:
global_storage_update:
    proto 0 0
    byte "Storage1"
    byte "Storage1 Updated"
    app_global_put
    byte "Storage2"
    byte "Storage2 Updated"
    app_global_put
    byte "IntegerKey"
    int 42
    app_global_put
    byte "ByteKey"
    byte 0x476c6f62616c2042797465732044617461
    app_global_put
    retsub


// smart_contracts.storage.contract.Storage.local_storage(user: bytes, new_value: bytes) -> void:
local_storage:
    proto 2 0
    frame_dig -2
    byte "LocalStorage1"
    frame_dig -1
    app_local_put
    frame_dig -2
    byte "LocalStorageInt"
    int 100
    app_local_put
    retsub


// smart_contracts.storage.contract.Storage.box_storage() -> uint64:
box_storage:
    proto 0 1
    byte 0x626f7841
    box_len
    bury 1
    bz box_storage_else_body@2
    byte 0x626f7841
    box_get
    assert // check self.box_a exists
    byte 0x00000028
    replace2 8
    byte 0x626f7841
    swap
    box_put
    b box_storage_after_if_else@3

box_storage_else_body@2:
    int 80
    bzero
    byte 0x626f7841
    swap
    box_put

box_storage_after_if_else@3:
    byte 0x626f7841
    box_get
    assert // check self.box_a exists
    extract 16 4 // on error: Index access is out of bounds
    byte 0x00000002
    b==
    retsub
